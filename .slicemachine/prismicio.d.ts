// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for About documents */
interface AboutDocumentData {
    /**
     * Slice Zone field in *About*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: about.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<AboutDocumentDataSlicesSlice>;
}
/**
 * Slice for *About → Slice Zone*
 *
 */
type AboutDocumentDataSlicesSlice = ImageSlice | AwardSlice | ContactSlice | Contact2Slice;
/**
 * About document from Prismic
 *
 * - **API ID**: `about`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AboutDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<AboutDocumentData>, "about", Lang>;
/** Content for Main documents */
interface MainDocumentData {
    /**
     * Slice Zone field in *Main*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: main.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<MainDocumentDataSlicesSlice>;
}
/**
 * Slice for *Main → Slice Zone*
 *
 */
type MainDocumentDataSlicesSlice = A100Slice;
/**
 * Main document from Prismic
 *
 * - **API ID**: `main`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type MainDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<MainDocumentData>, "main", Lang>;
/** Content for POST documents */
interface PostDocumentData {
    /**
     * title field in *POST*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: post.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * content field in *POST*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: post.content
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    content: prismicT.RichTextField;
    /**
     * heroimage field in *POST*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: post.heroimage
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    heroimage: prismicT.ImageField<never>;
}
/**
 * POST document from Prismic
 *
 * - **API ID**: `post`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PostDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<PostDocumentData>, "post", Lang>;
/** Content for Project documents */
interface ProjectDocumentData {
    /**
     * Slice Zone field in *Project*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: project.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<ProjectDocumentDataSlicesSlice>;
}
/**
 * Slice for *Project → Slice Zone*
 *
 */
type ProjectDocumentDataSlicesSlice = ProjectSlice;
/**
 * Project document from Prismic
 *
 * - **API ID**: `project`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProjectDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<ProjectDocumentData>, "project", Lang>;
/** Content for teaser documents */
interface TeaserDocumentData {
    /**
     * title field in *teaser*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: teaser.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * content field in *teaser*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: teaser.content
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    content: prismicT.RichTextField;
    /**
     * heroimage field in *teaser*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: teaser.heroimage
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    heroimage: prismicT.ImageField<never>;
}
/**
 * teaser document from Prismic
 *
 * - **API ID**: `teaser`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TeaserDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<TeaserDocumentData>, "teaser", Lang>;
export type AllDocumentTypes = AboutDocument | MainDocument | PostDocument | ProjectDocument | TeaserDocument;
/**
 * Item in Award → Items
 *
 */
export interface AwardSliceDefaultItem {
    /**
     * date field in *Award → Items*
     *
     * - **Field Type**: Timestamp
     * - **Placeholder**: *None*
     * - **API ID Path**: award.items[].date
     * - **Documentation**: https://prismic.io/docs/core-concepts/timestamp
     *
     */
    date: prismicT.TimestampField;
    /**
     * text field in *Award → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: award.items[].text
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    text: prismicT.RichTextField;
}
/**
 * Default variation for Award Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Award`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type AwardSliceDefault = prismicT.SharedSliceVariation<"default", Record<string, never>, Simplify<AwardSliceDefaultItem>>;
/**
 * Slice variation for *Award*
 *
 */
type AwardSliceVariation = AwardSliceDefault;
/**
 * Award Shared Slice
 *
 * - **API ID**: `award`
 * - **Description**: `Award`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type AwardSlice = prismicT.SharedSlice<"award", AwardSliceVariation>;
/**
 * Primary content in Contact → Primary
 *
 */
interface ContactSliceDefaultPrimary {
    /**
     * name field in *Contact → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: contact.primary.name
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    name: prismicT.RichTextField;
    /**
     * email field in *Contact → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: contact.primary.email
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    email: prismicT.RichTextField;
    /**
     * basedin field in *Contact → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: contact.primary.basedin
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    basedin: prismicT.RichTextField;
    /**
     * link field in *Contact → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: contact.primary.link
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    link: prismicT.RichTextField;
}
/**
 * Default variation for Contact Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Contact`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContactSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ContactSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Contact*
 *
 */
type ContactSliceVariation = ContactSliceDefault;
/**
 * Contact Shared Slice
 *
 * - **API ID**: `contact`
 * - **Description**: `Contact`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContactSlice = prismicT.SharedSlice<"contact", ContactSliceVariation>;
/**
 * Primary content in Contact2 → Primary
 *
 */
interface Contact2SliceDefaultPrimary {
    /**
     * name field in *Contact2 → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: contact2.primary.name
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    name: prismicT.RichTextField;
    /**
     * email field in *Contact2 → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: contact2.primary.email
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    email: prismicT.RichTextField;
    /**
     * basedin field in *Contact2 → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: contact2.primary.basedin
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    basedin: prismicT.RichTextField;
    /**
     * link field in *Contact2 → Primary*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: contact2.primary.link
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    link: prismicT.LinkField;
}
/**
 * Default variation for Contact2 Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Contact2`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type Contact2SliceDefault = prismicT.SharedSliceVariation<"default", Simplify<Contact2SliceDefaultPrimary>, never>;
/**
 * Slice variation for *Contact2*
 *
 */
type Contact2SliceVariation = Contact2SliceDefault;
/**
 * Contact2 Shared Slice
 *
 * - **API ID**: `contact2`
 * - **Description**: `Contact2`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type Contact2Slice = prismicT.SharedSlice<"contact2", Contact2SliceVariation>;
/**
 * Item in Image → Items
 *
 */
export interface ImageSliceDefaultItem {
    /**
     * image field in *Image → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: image.items[].image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
    /**
     * description field in *Image → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: image.items[].description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Default variation for Image Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Image`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageSliceDefault = prismicT.SharedSliceVariation<"default", Record<string, never>, Simplify<ImageSliceDefaultItem>>;
/**
 * Slice variation for *Image*
 *
 */
type ImageSliceVariation = ImageSliceDefault;
/**
 * Image Shared Slice
 *
 * - **API ID**: `image`
 * - **Description**: `Image`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageSlice = prismicT.SharedSlice<"image", ImageSliceVariation>;
/**
 * Item in Main → Items
 *
 */
export interface A100SliceDefaultItem {
    /**
     * heroimage field in *Main → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: a100.items[].heroimage
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    heroimage: prismicT.ImageField<never>;
    /**
     * title field in *Main → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: a100.items[].title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * description field in *Main → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: a100.items[].description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Default variation for Main Slice
 *
 * - **API ID**: `default`
 * - **Description**: `A100`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type A100SliceDefault = prismicT.SharedSliceVariation<"default", Record<string, never>, Simplify<A100SliceDefaultItem>>;
/**
 * Slice variation for *Main*
 *
 */
type A100SliceVariation = A100SliceDefault;
/**
 * Main Shared Slice
 *
 * - **API ID**: `a100`
 * - **Description**: `A100`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type A100Slice = prismicT.SharedSlice<"a100", A100SliceVariation>;
/**
 * Primary content in Project → Primary
 *
 */
interface ProjectSliceDefaultPrimary {
    /**
     * Title field in *Project → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: project.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * date field in *Project → Primary*
     *
     * - **Field Type**: Timestamp
     * - **Placeholder**: *None*
     * - **API ID Path**: project.primary.date
     * - **Documentation**: https://prismic.io/docs/core-concepts/timestamp
     *
     */
    date: prismicT.TimestampField;
    /**
     * description field in *Project → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: project.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Item in Project → Items
 *
 */
export interface ProjectSliceDefaultItem {
    /**
     * heroimage field in *Project → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: project.items[].heroimage
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    heroimage: prismicT.ImageField<never>;
    /**
     * description field in *Project → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: project.items[].description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Default variation for Project Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Project`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ProjectSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ProjectSliceDefaultPrimary>, Simplify<ProjectSliceDefaultItem>>;
/**
 * Slice variation for *Project*
 *
 */
type ProjectSliceVariation = ProjectSliceDefault;
/**
 * Project Shared Slice
 *
 * - **API ID**: `project`
 * - **Description**: `Project`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ProjectSlice = prismicT.SharedSlice<"project", ProjectSliceVariation>;
/**
 * Item in Text → Items
 *
 */
export interface ContactSliceDefaultItem {
    /**
     * title field in *Text → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: contact.items[].title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.RichTextField;
    /**
     * text field in *Text → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: contact.items[].text
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    text: prismicT.RichTextField;
}
/**
 * Default variation for Text Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Contact`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContactSliceDefault = prismicT.SharedSliceVariation<"default", Record<string, never>, Simplify<ContactSliceDefaultItem>>;
/**
 * Slice variation for *Text*
 *
 */
type ContactSliceVariation = ContactSliceDefault;
/**
 * Text Shared Slice
 *
 * - **API ID**: `contact`
 * - **Description**: `Contact`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContactSlice = prismicT.SharedSlice<"contact", ContactSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { AboutDocumentData, AboutDocumentDataSlicesSlice, AboutDocument, MainDocumentData, MainDocumentDataSlicesSlice, MainDocument, PostDocumentData, PostDocument, ProjectDocumentData, ProjectDocumentDataSlicesSlice, ProjectDocument, TeaserDocumentData, TeaserDocument, AllDocumentTypes, AwardSliceDefaultItem, AwardSliceDefault, AwardSliceVariation, AwardSlice, ContactSliceDefaultPrimary, ContactSliceDefault, ContactSliceVariation, ContactSlice, Contact2SliceDefaultPrimary, Contact2SliceDefault, Contact2SliceVariation, Contact2Slice, ImageSliceDefaultItem, ImageSliceDefault, ImageSliceVariation, ImageSlice, A100SliceDefaultItem, A100SliceDefault, A100SliceVariation, A100Slice, ProjectSliceDefaultPrimary, ProjectSliceDefaultItem, ProjectSliceDefault, ProjectSliceVariation, ProjectSlice, ContactSliceDefaultItem };
    }
}
